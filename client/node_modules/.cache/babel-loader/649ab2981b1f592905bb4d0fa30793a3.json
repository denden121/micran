{"ast":null,"code":"var _jsxFileName = \"/home/den/WebstormProjects/micran/client/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Auth from './Auth/Auth';\nimport Cookies from 'js-cookie';\n\nclass App extends Component {\n  getCook(name) {\n    console.log(name);\n    var cookieValue = null;\n\n    if (document.cookie && document.cookie !== '') {\n      var cookies = document.cookie.split(';');\n\n      for (var i = 0; i < cookies.length; i++) {\n        var cookie = cookies[i].trim(); // Does this cookie string begin with the name we want?\n\n        if (cookie.substring(0, name.length + 1) === name + '=') {\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n          break;\n        }\n      }\n    }\n\n    return cookieValue;\n  }\n\n  authHandler() {\n    // let requestOptions1 = {\n    //     method: 'GET',\n    // };\n    // // let temp;\n    // fetch(\"http://127.0.0.1:8000/test1/\", requestOptions1)\n    //     .then(response => console.log(response.headers))\n    // console.log(document.cookie)\n    let csrftoken = this.getCook('csrftoken');\n    let urlencoded = new URLSearchParams();\n    urlencoded.append(\"username\", \"first\");\n    urlencoded.append(\"password\", \"w8$jdP#u7LMFRJn\");\n    let requestOptions = {\n      credentials: 'include',\n      method: 'POST',\n      mode: 'same-origin',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'X-CSRFToken': csrftoken\n      },\n      body: urlencoded\n    };\n    axios(\"http://127.0.0.1:8000/test1/\", requestOptions) //     .then(response => response.text())\n    .then(result => console.log(result.date));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Auth, {\n      authHandler: this.authHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/den/WebstormProjects/micran/client/src/App.js"],"names":["React","Component","Auth","Cookies","App","getCook","name","console","log","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","authHandler","csrftoken","urlencoded","URLSearchParams","append","requestOptions","credentials","method","mode","headers","body","axios","then","result","date","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AACA,MAAMC,GAAN,SAAkBH,SAAlB,CAA2B;AACvBI,EAAAA,OAAO,CAACC,IAAD,EAAM;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,QAAIG,WAAW,GAAG,IAAlB;;AACA,QAAIC,QAAQ,CAACC,MAAT,IAAmBD,QAAQ,CAACC,MAAT,KAAoB,EAA3C,EAA+C;AAC3C,UAAIC,OAAO,GAAGF,QAAQ,CAACC,MAAT,CAAgBE,KAAhB,CAAsB,GAAtB,CAAd;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,OAAO,CAACG,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACrC,YAAIH,MAAM,GAAGC,OAAO,CAACE,CAAD,CAAP,CAAWE,IAAX,EAAb,CADqC,CAErC;;AACA,YAAIL,MAAM,CAACM,SAAP,CAAiB,CAAjB,EAAoBX,IAAI,CAACS,MAAL,GAAc,CAAlC,MAA0CT,IAAI,GAAG,GAArD,EAA2D;AACvDG,UAAAA,WAAW,GAAGS,kBAAkB,CAACP,MAAM,CAACM,SAAP,CAAiBX,IAAI,CAACS,MAAL,GAAc,CAA/B,CAAD,CAAhC;AACA;AACH;AACJ;AACJ;;AACD,WAAON,WAAP;AACH;;AACDU,EAAAA,WAAW,GAAG;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAIC,SAAS,GAAG,KAAKf,OAAL,CAAa,WAAb,CAAhB;AACA,QAAIgB,UAAU,GAAG,IAAIC,eAAJ,EAAjB;AACAD,IAAAA,UAAU,CAACE,MAAX,CAAkB,UAAlB,EAA8B,OAA9B;AACAF,IAAAA,UAAU,CAACE,MAAX,CAAkB,UAAlB,EAA8B,iBAA9B;AACA,QAAIC,cAAc,GAAG;AACjBC,MAAAA,WAAW,EAAE,SADI;AAEjBC,MAAAA,MAAM,EAAE,MAFS;AAGjBC,MAAAA,IAAI,EAAE,aAHW;AAIjBC,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,wBAAgB,kBAFX;AAGL,uBAAeR;AAHV,OAJQ;AASjBS,MAAAA,IAAI,EAAER;AATW,KAArB;AAYAS,IAAAA,KAAK,CAAC,8BAAD,EAAiCN,cAAjC,CAAL,CACA;AADA,KAEKO,IAFL,CAEUC,MAAM,IAAIzB,OAAO,CAACC,GAAR,CAAYwB,MAAM,CAACC,IAAnB,CAFpB;AAGH;;AACDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,WAAW,EAAE,KAAKf,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AAnDsB;;AAsD3B,eAAef,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport Auth from './Auth/Auth'\nimport Cookies from 'js-cookie'\nclass App extends Component{\n    getCook(name){\n        console.log(name);\n        var cookieValue = null;\n        if (document.cookie && document.cookie !== '') {\n            var cookies = document.cookie.split(';');\n            for (var i = 0; i < cookies.length; i++) {\n                var cookie = cookies[i].trim();\n                // Does this cookie string begin with the name we want?\n                if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                    break;\n                }\n            }\n        }\n        return cookieValue;\n    }\n    authHandler() {\n        // let requestOptions1 = {\n        //     method: 'GET',\n        // };\n        // // let temp;\n        // fetch(\"http://127.0.0.1:8000/test1/\", requestOptions1)\n        //     .then(response => console.log(response.headers))\n        // console.log(document.cookie)\n        let csrftoken = this.getCook('csrftoken')\n        let urlencoded = new URLSearchParams();\n        urlencoded.append(\"username\", \"first\");\n        urlencoded.append(\"password\", \"w8$jdP#u7LMFRJn\");\n        let requestOptions = {\n            credentials: 'include',\n            method: 'POST',\n            mode: 'same-origin',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'X-CSRFToken': csrftoken\n            },\n            body: urlencoded\n        };\n\n        axios(\"http://127.0.0.1:8000/test1/\", requestOptions)\n        //     .then(response => response.text())\n            .then(result => console.log(result.date))\n    }\n    render() {\n        return (\n            <div className=\"App\">\n                <Auth authHandler={this.authHandler}/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}