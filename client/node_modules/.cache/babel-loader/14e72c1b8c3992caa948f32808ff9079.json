{"ast":null,"code":"var _jsxFileName = \"/home/den/WebstormProjects/micran/client/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Auth from './Auth/Auth'; // import axios from 'axios'\n\nclass App extends Component {\n  getCookie(name) {\n    let cookieValue = null;\n\n    if (document.cookie && document.cookie !== '') {\n      let cookies = document.cookie.split(';');\n\n      for (let i = 0; i < cookies.length; i++) {\n        let cookie = cookies[i].trim(); // Does this cookie string begin with the name we want?\n\n        if (cookie.substring(0, name.length + 1) === name + '=') {\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n          break;\n        }\n      }\n    }\n\n    return cookieValue;\n  }\n\n  async authHandler() {\n    let requestOptions1 = {\n      method: 'GET'\n    };\n    let temp;\n    fetch(\"http://127.0.0.1:8000/test1/\", requestOptions1).then(response => document.cookie = response);\n    console.log(document.cookie);\n    let urlencoded = new URLSearchParams(); // let a = document.cookie;\n    // let b = a.split('=');\n    // console.log(b[1]);\n\n    urlencoded.append(\"username\", \"first\");\n    urlencoded.append(\"password\", \"w8$jdP#u7LMFRJn\");\n    let myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\"); // myHeaders.append(\"X-CSRFToken\", b[1])   ;\n\n    let requestOptions = {\n      method: 'POST',\n      body: urlencoded,\n      redirect: 'follow',\n      headers: myHeaders\n    };\n    fetch(\"http://127.0.0.1:8000/test1/\", requestOptions) //     .then(response => response.text())\n    .then(result => console.log(result.date));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Auth, {\n      authHandler: this.authHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/den/WebstormProjects/micran/client/src/App.js"],"names":["React","Component","Auth","App","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","authHandler","requestOptions1","method","temp","fetch","then","response","console","log","urlencoded","URLSearchParams","append","myHeaders","Headers","requestOptions","body","redirect","headers","result","date","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,aAAjB,C,CACA;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA2B;AACvBG,EAAAA,SAAS,CAACC,IAAD,EAAM;AACX,QAAIC,WAAW,GAAG,IAAlB;;AACA,QAAIC,QAAQ,CAACC,MAAT,IAAmBD,QAAQ,CAACC,MAAT,KAAoB,EAA3C,EAA+C;AAC3C,UAAIC,OAAO,GAAGF,QAAQ,CAACC,MAAT,CAAgBE,KAAhB,CAAsB,GAAtB,CAAd;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,OAAO,CAACG,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACrC,YAAIH,MAAM,GAAGC,OAAO,CAACE,CAAD,CAAP,CAAWE,IAAX,EAAb,CADqC,CAErC;;AACA,YAAIL,MAAM,CAACM,SAAP,CAAiB,CAAjB,EAAoBT,IAAI,CAACO,MAAL,GAAc,CAAlC,MAA0CP,IAAI,GAAG,GAArD,EAA2D;AACvDC,UAAAA,WAAW,GAAGS,kBAAkB,CAACP,MAAM,CAACM,SAAP,CAAiBT,IAAI,CAACO,MAAL,GAAc,CAA/B,CAAD,CAAhC;AACA;AACH;AACJ;AACJ;;AACD,WAAON,WAAP;AACH;;AACD,QAAMU,WAAN,GAAoB;AAChB,QAAIC,eAAe,GAAG;AAClBC,MAAAA,MAAM,EAAE;AADU,KAAtB;AAGA,QAAIC,IAAJ;AACAC,IAAAA,KAAK,CAAC,8BAAD,EAAiCH,eAAjC,CAAL,CACKI,IADL,CACUC,QAAQ,IAAIf,QAAQ,CAACC,MAAT,GAAkBc,QADxC;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYjB,QAAQ,CAACC,MAArB;AACA,QAAIiB,UAAU,GAAG,IAAIC,eAAJ,EAAjB,CARgB,CAShB;AACA;AACA;;AACAD,IAAAA,UAAU,CAACE,MAAX,CAAkB,UAAlB,EAA8B,OAA9B;AACAF,IAAAA,UAAU,CAACE,MAAX,CAAkB,UAAlB,EAA8B,iBAA9B;AACA,QAAIC,SAAS,GAAG,IAAIC,OAAJ,EAAhB;AACAD,IAAAA,SAAS,CAACD,MAAV,CAAiB,cAAjB,EAAiC,mCAAjC,EAfgB,CAgBhB;;AACA,QAAIG,cAAc,GAAG;AACjBZ,MAAAA,MAAM,EAAE,MADS;AAEjBa,MAAAA,IAAI,EAAEN,UAFW;AAGjBO,MAAAA,QAAQ,EAAE,QAHO;AAIjBC,MAAAA,OAAO,EAAEL;AAJQ,KAArB;AAMAR,IAAAA,KAAK,CAAC,8BAAD,EAAiCU,cAAjC,CAAL,CACA;AADA,KAEKT,IAFL,CAEUa,MAAM,IAAIX,OAAO,CAACC,GAAR,CAAYU,MAAM,CAACC,IAAnB,CAFpB;AAGH;;AACDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,WAAW,EAAE,KAAKpB,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AAjDsB;;AAoD3B,eAAeb,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport Auth from './Auth/Auth'\n// import axios from 'axios'\n\nclass App extends Component{\n    getCookie(name){\n        let cookieValue = null;\n        if (document.cookie && document.cookie !== '') {\n            let cookies = document.cookie.split(';');\n            for (let i = 0; i < cookies.length; i++) {\n                let cookie = cookies[i].trim();\n                // Does this cookie string begin with the name we want?\n                if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                    break;\n                }\n            }\n        }\n        return cookieValue;\n    }\n    async authHandler() {\n        let requestOptions1 = {\n            method: 'GET',\n        };\n        let temp;\n        fetch(\"http://127.0.0.1:8000/test1/\", requestOptions1)\n            .then(response => document.cookie = response)\n        console.log(document.cookie)\n        let urlencoded = new URLSearchParams();\n        // let a = document.cookie;\n        // let b = a.split('=');\n        // console.log(b[1]);\n        urlencoded.append(\"username\", \"first\");\n        urlencoded.append(\"password\", \"w8$jdP#u7LMFRJn\");\n        let myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n        // myHeaders.append(\"X-CSRFToken\", b[1])   ;\n        let requestOptions = {\n            method: 'POST',\n            body: urlencoded,\n            redirect: 'follow',\n            headers: myHeaders,\n        };\n        fetch(\"http://127.0.0.1:8000/test1/\", requestOptions)\n        //     .then(response => response.text())\n            .then(result => console.log(result.date))\n    }\n    render() {\n        return (\n            <div className=\"App\">\n                <Auth authHandler={this.authHandler}/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}